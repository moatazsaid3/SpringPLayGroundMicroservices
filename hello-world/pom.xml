<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>learning</artifactId>
		<groupId>com.example</groupId>
		<version>1.0</version>
	</parent>

	<groupId>com.example</groupId>
	<artifactId>hello-world</artifactId>
	<version>1.0</version>
	<name>hello-world</name>


	<properties>
		<java.version>17</java.version>
		<spring-cloud.version>2022.0.2</spring-cloud.version>
			<packaging.outputDirectory>${build.path.directory}/Learning/microservices/${project.artifactId}
            </packaging.outputDirectory>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
		</dependency>
<!--		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
		</dependency>-->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>6.0.9</version>
		</dependency>


	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.0.6</version>

				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${packaging.outputDirectory}</outputDirectory>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>target/generated-sources/annotations</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
									<excludes>
										<exclude>application.properties</exclude>
										<exclude>application-local.properties</exclude>
										<exclude>settings-local.properties</exclude>
										<exclude>database-scripts/*</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copying-database-scripts</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${packaging.outputDirectory}/database-scripts</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources/database-scripts</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>copy-configurations-and-settings</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<fileSets>
								<fileSet>
									<sourceFile>./src/main/resources/settings-${current.environment}.properties
									</sourceFile>
									<destinationFile>${packaging.outputDirectory}/settings.properties</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>./src/main/resources/application-${current.environment}.properties
									</sourceFile>
									<destinationFile>${project.build.outputDirectory}/application.properties
									</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.build.outputDirectory}/docker/Dockerfile</sourceFile>
									<destinationFile>${packaging.outputDirectory}/Dockerfile</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.build.outputDirectory}/docker/entrypoint.sh</sourceFile>
									<destinationFile>${packaging.outputDirectory}/entrypoint.sh</destinationFile>
								</fileSet>
								<fileSet>
									<sourceFile>${project.build.outputDirectory}/docker/wait-for-it.sh</sourceFile>
									<destinationFile>${packaging.outputDirectory}/wait-for-it.sh</destinationFile>
								</fileSet>
							</fileSets>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}-service</finalName>
	</build>

</project>
